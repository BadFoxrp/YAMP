/**
	Yet Another Metagenomic Pipeline (YAMP)
	Copyright (C) 2017 	Dr Alessia Visconti 	      
	      
	This script is free software: you can redistribute it and/or modify
	it under the terms of the GNU General Public License as published by
	the Free Software Foundation, either version 3 of the License, or
	(at your option) any later version.
	
	This script is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU General Public License for more details.
	
	You should have received a copy of the GNU General Public License
	along with this script.  If not, see <http://www.gnu.org/licenses/>.
	
	For any bugs or problems found, please contact us at
	- alessia.visconti@kcl.ac.uk ; 
	- https://github.com/alesssia/YAMP/issues
*/

manifest {
  name = 'YAMP'
  author = 'Alessia Visconti'
  homePage = 'https://github.com/alessia/yamp'
  description = 'Yet Another Metagenomic Pipeline'
  mainScript = 'YAMP.nf'
  version = '0.9.5.3'
}

params {

	/*--------------------------------*
	 *	CONTAINERS
	 *--------------------------------*/
	 enable_conda = false

    conda_bbmap = "bioconda::bbmap=38.87-0"
    singularity_container_bbmap = "https://depot.galaxyproject.org/singularity/bbmap:38.87--h1296035_0"
    docker_container_bbmap = "quay.io/biocontainers/bbmap:38.87--h1296035_0"
  
    conda_fastqc = "bioconda::fastqc=0.11.9-0"
    singularity_container_fastqc = "https://depot.galaxyproject.org/singularity/fastqc:0.11.9--0"
    docker_containe_fastqc = "quay.io/biocontainers/fastqc:0.11.9--0"
	
    conda_multiqc = "bioconda::multiqc=1.9-1"
    singularity_container_multiqc = "https://depot.galaxyproject.org/singularity/multiqc:1.9--py_1"
    docker_container_multiqc = "quay.io/biocontainers/multiqc:1.9--py_1"
  
	/*--------------------------------*
	 *	EXECUTION FLOW PARAMETERS
	 *--------------------------------*/	

	//Whether it shold perform only QC, community characterisation, or both (default: both)
	mode="complete"

    //Whether we the input reads are single or paired-end 
    singleEnd = false
	
	//Whether the de-duplication step should be performed
	dedup = false
  
	/*--------------------------------*
	 *	SOFTWARE PARAMETERS
	 *--------------------------------*/

	//BBduk parameters for trimming	
	qin=33 //Input quality offset: 33 (ASCII+33) or 64 (ASCII+64)
	kcontaminants = 23 //Kmer length used for finding contaminants	
	phred = 10 //regions with average quality BELOW this will be trimmed 
	minlength = 60 //reads shorter than this after trimming will be discarded
    mink = 11 //shorter kmers at read tips to look for 
	hdist = 1  //maximum Hamming distance for ref kmers            

	//BBwrap parameters for decontamination	
	mind = 0.95 //Approximate minimum alignment identity to look for
	maxindel = 3 //longest indel to look for
	bwr=0.16 //restrict alignment band to this
	
	//MetaPhlAn2 parameters 
	bt2options="very-sensitive" //presets options for BowTie2
  
	/*--------------------------------*
	 *	INITIALIZATION
	 *--------------------------------*/
  
	//These are used when the analysis is in characterisation mode
	reads1 = ''
	reads2 = ''
	
	//These are used to print version and help
	help = null
	version = null
	
	multiqc_config="$baseDir/conf/multiqc_config.yaml"
}


profiles {
	
  awsbatch {
    includeConfig 'conf/base.config'
    includeConfig 'conf/awsbatch.config'
  }
  
  docker {
    docker.enabled = true
    // Avoid this error:
    // WARNING: Your kernel does not support swap limit capabilities or the cgroup is not mounted. Memory limited without swap.
    // Testing this in nf-core after discussion here https://github.com/nf-core/tools/pull/351
    // once this is established and works well, nextflow might implement this behavior as new default.
    docker.runOptions = '-u \$(id -u):\$(id -g)'
  }
  
  rosalind {
	includeConfig 'conf/base.config'
  	process.executor = 'slurm'
	process.queue = 'brc'
  }
  
  singularity {
    singularity.enabled = true
  }
  
  standard {
    includeConfig 'conf/base.config'
  }
  
  test {
    includeConfig 'conf/base.config'
    includeConfig 'conf/test.config'
  }
  
}

// FIXME: these need to be moved in the corret folder once the execution is completed
trace 
{
    enabled = false
    fields = 'task_id, name, status, exit, module, submit, start, complete, duration, realtime, %cpu, rss, vmem, peak_rss, peak_vmem'
	//file = "${workflow.workDir}/${workflow.runName}_trace.html"
}

timeline {
  enabled = false
  //file = "${workflow.workDir}/${workflow.runName}_timeline.html"
}

report {
  enabled = false
  //file = "${workflow.workDir}/${workflow.runName}_report.html"
}

dag {
  enabled = false
  //file = "${workflow.workDir}/${workflow.runName}_dag.svg"
}
